<?php
defined('BASEPATH') OR exit('No direct script access allowed');
class Controles extends CI_Controller
{
	 public function __construct()
    {
        parent::__construct();
        $this->load->model('comportement_model');
        $this->load->model('controles_model');
        $this->load->view('theme/header');
    }
    public function index()
    {
    	if (null!==($this->session->userdata('identifiant'))) {
            // si on a une session avec identifiant d'ouverte
             $data=array();
             $data['en_cours_controle']=$this->controles_model->GetControleHoraire($this->session->userdata('identifiant'));
             // on détermine si l'user a déjà une plage horaire en cours , sinon on l'invite à en créer une
             if (!empty($data['en_cours_controle'])) {
                var_dump($data['en_cours_controle']);
             }

             else {
                
             }
            // $this->load->view('option21/apercu',$data);          
            // $data['planif_a_faire']=$this->option21_model->planif_a_faire();
            // $this->load->view('option21/planif_a_faire',$data);            
            // $data['historique']=$this->option21_model->listing_option21_historique();
            // $this->load->view('option21/historique',$data);
            
        }
        else
        {
            redirect('login');
        }
    }

    public function comportements()
    {
        $data=array();
        $data['listing_comportement']=$this->comportement_model->listing_comportement();
        $this->load->view('controles/liste_comportement',$data);
    }
    public function creation_comportement()
    {
        $this->load->view('controles/creation_comportement');
    }
    public function insertion_comportement()
    {
        $heure_debut=$this->input->post('heure_debut');
        $heure_fin=$this->input->post('heure_fin');
        $intervalle=$this->input->post('intervalle');
        $statut=$this->input->post('statut');
        $jour=$this->input->post('jour');
        $type=$this->input->post('type');
        $continue =$this-> Get_validite_comportement($heure_debut,$heure_fin,$intervalle,$jour,$type);
        if ($continue == false){
            //popup qui annonce que comportement pas créer car remplit pas les conditions    
            redirect('controles/creation_comportement');
        }
        else {
            $this->comportement_model->insertion_comportement($heure_debut,$heure_fin,$intervalle,$statut,$jour,$type);
            redirect('controles/comportements');
        }

    }
    public function Get_validite_comportement($heure_debut,$heure_fin,$intervalle,$jour,$type)
    {
        $ret = true;
        if (date($heure_fin) < date($heure_debut)) {
             $ret = false;
        } 
        if ($type =="H" && $jour>7) {
             $ret = false ;
        }
        return $ret;
    }
    public function modif_comportement($id)
    {
        $data=array();
        $data['comportement_detail']=$this->comportement_model->infos_comportement($id);
        $this->load->view('controles/infos_comportement',$data);
    }
    public function validation_modif_comportement($id)
    {//recupère les infos du formulaire via post et l'id via get, puis on envoie vers model qui fait un update sur bdd
        $heure_debut=$this->input->post('heure_debut');
        $heure_fin=$this->input->post('heure_fin');
        $intervalle=$this->input->post('intervalle');
        $statut=$this->input->post('statut');
        $jour=$this->input->post('jour');
        $type=$this->input->post('type');
        $id_comportement=$id;// on recupère l'id par du GET via URL
        $continue =$this-> Get_validite_comportement($heure_debut,$heure_fin,$intervalle,$jour,$type);
        if ($continue == false){
            //todo: popup qui annonce que modif pas accepté
            $data['comportement_detail']=$this->comportement_model->infos_comportement($id);
            $this->load->view('controles/infos_comportement',$data);
        }
        else {
            $this->comportement_model->maj_comportement($heure_debut,$heure_fin,$intervalle,$statut,$jour,$type,$id_comportement);
            redirect('controles/comportements');
        }
    }
    public function supprimer_comportement($id)
    {
        //suppression de la machine
        $id_machines=$id;
        $this->comportement_model->suppression_comportement($id_machines);
        redirect('controles/comportements');
    }
}